name: EC2 Deployment Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production   # ðŸ‘ˆ use environment secrets

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}   # private key for EC2 login
          script_stop: true                 # ðŸ‘ˆ stop if any command fails
          script: |
            set -e  # fail on first error

            echo "[INFO] Loading NVM environment..."
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm use 20 || { echo "[ERROR] Failed to use Node 20"; exit 1; }

            echo "[INFO] Switching to app directory..."
            cd ~/mtc_production/mtc-api-node || { echo "[ERROR] Directory not found"; exit 1; }

            echo "[INFO] Pulling latest code..."
            git pull origin main || { echo "[ERROR] Git pull failed"; exit 1; }

            echo "[INFO] Installing dependencies..."
            npm install --no-audit --no-fund || { echo "[ERROR] NPM install failed"; exit 1; }

            echo "[INFO] Updating environment file..."
            if [ -f env.production.template ]; then
              cp env.production.template .env.ec2
              echo "[INFO] .env.ec2 updated successfully"
            else
              echo "[ERROR] env.production.template missing"; exit 1;
            fi

            echo "[INFO] Locating PM2..."
            PM2_CMD=$(command -v pm2 || true)
            if [ -z "$PM2_CMD" ]; then
              echo "[WARN] PM2 not found in PATH, checking fallback..."
              if [ -f "$HOME/.nvm/versions/node/v20.19.4/bin/pm2" ]; then
                PM2_CMD="$HOME/.nvm/versions/node/v20.19.4/bin/pm2"
              else
                echo "[ERROR] PM2 not found. Try: npm install -g pm2"; exit 1;
              fi
            fi
            echo "[INFO] Using PM2 at: $PM2_CMD"

            echo "[INFO] Managing PM2 service..."
            if $PM2_CMD list | grep -q "mtc_backend"; then
              echo "[INFO] Restarting existing service..."
              $PM2_CMD restart mtc_backend || { echo "[ERROR] PM2 restart failed"; exit 1; }
            else
              echo "[INFO] Starting new PM2 service..."
              $PM2_CMD start npm --name "mtc_backend" -- run dev || { echo "[ERROR] PM2 start failed"; exit 1; }
              $PM2_CMD save
            fi

            echo "[INFO] Checking PM2 status..."
            $PM2_CMD show mtc_backend || { echo "[ERROR] PM2 service not found"; exit 1; }

            echo "[INFO] Deployment finished âœ…"
            exit 0
